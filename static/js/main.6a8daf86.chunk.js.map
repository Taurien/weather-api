{"version":3,"sources":["context/WeatherContext.jsx","components/Home/Form/WeatherForm.jsx","assets/weather-icons/Clear.svg","assets/weather-icons/Clouds.svg","assets/weather-icons/Rain.svg","assets/weather-icons/Drizzle.svg","components/Custom/CityInformation/CityInformation.jsx","components/Custom/Loader/Loader.jsx","views/Home/Home.jsx","hooks/useFetchData.jsx","views/WeatherInformation/WeatherInformation.jsx","App.js","reportWebVitals.js","index.js"],"names":["WeatherContext","createContext","WeatherContextProvider","children","useState","weather","setWeather","data","handleWeather","el","Provider","value","WeatherForm","handleCity","handleFetchData","action","className","onSubmit","e","type","placeholder","onChange","target","CityInformation","props","message","name","temp","sys","wind","navigate","useNavigate","weatherIcon","Clouds","Rain","Drizzle","Clear","country","main","description","src","alt","Math","floor","ceil","feels_like","humidity","speed","deg","parseInt","onClick","pathname","Loader","Home","ciytName","setCiytName","useContext","API","setData","loader","setLoader","a","preventDefault","fetch","response","json","result","useFetchData","process","useEffect","WeatherInformation","App","hours","Date","getHours","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a8daf86.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\n//create\r\nconst WeatherContext = createContext()\r\n\r\n//provider\r\nconst WeatherContextProvider = ({ children }) => {\r\n    \r\n    const [ weather, setWeather] = useState(null)\r\n\r\n    const handleWeather = (el) => setWeather(el)\r\n\r\n    const data = {\r\n        weather,\r\n        handleWeather,\r\n    }\r\n    \r\n    return (\r\n        <WeatherContext.Provider value={ data }>\r\n        {children}\r\n        </WeatherContext.Provider>\r\n    )\r\n}\r\n\r\nexport { WeatherContextProvider }\r\nexport default WeatherContext\r\n","import React from 'react'\r\n\r\nimport '../Form/WeatherForm.style.scss'\r\n\r\nconst WeatherForm = ({ handleCity, handleFetchData }) => {\r\n    return (\r\n        <form action=''\r\n        className='self-center grid'\r\n        onSubmit={e => handleFetchData(e)}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder='City Name'\r\n                onChange={({ target }) => handleCity(target)}\r\n            />\r\n            <input\r\n                type=\"submit\"\r\n                value='¡¡Search!!'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WeatherForm\r\n","export default __webpack_public_path__ + \"static/media/Clear.b8a082d6.svg\";","export default __webpack_public_path__ + \"static/media/Clouds.243a02fb.svg\";","export default __webpack_public_path__ + \"static/media/Rain.0a8457a0.svg\";","export default __webpack_public_path__ + \"static/media/Drizzle.ed6ad5eb.svg\";","import React from 'react'\r\n//Router\r\nimport { useNavigate } from 'react-router-dom'\r\n//Weather Icons\r\nimport Clear from '../../../assets/weather-icons/Clear.svg'\r\nimport Clouds from '../../../assets/weather-icons/Clouds.svg'\r\nimport Rain from '../../../assets/weather-icons/Rain.svg'\r\nimport Drizzle from '../../../assets/weather-icons/Drizzle.svg'\r\n//Style\r\nimport './CityInformation.style.scss'\r\n\r\n\r\nconst CityInformation = ( props ) => {\r\n    \r\n    const {\r\n        message,\r\n        name,\r\n        weather,\r\n        temp,\r\n        sys,\r\n        wind } = props\r\n\r\n    const navigate = useNavigate()\r\n    const navToFollowers = () => {\r\n        navigate({ pathname: `/weather/${name}` })\r\n    }\r\n    \r\n    const weatherIcon = (el) => {\r\n        if (el === 'Clouds') {\r\n            return Clouds\r\n        } else if (el === 'Rain') {\r\n            return Rain\r\n        } else if (el === 'Drizzle') {\r\n            return Drizzle\r\n        } else {\r\n            return Clear\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='cityinfocard flex flex-col self-center'>\r\n            {\r\n                wind ? (\r\n                    <>\r\n                    <p>{name} | {sys.country}</p>\r\n                    <span className='inline-flex justify-between items-center'>\r\n                        <p>{weather[0].main} | {weather[0].description}</p>\r\n                        <img src={weatherIcon(weather[0].main)} alt={weather[0].main} />\r\n                    </span>\r\n                    <p>Temp: {Math.floor(temp.temp-273.15)}°C | Feels like: {Math.ceil(temp.feels_like-273.15)}°</p>\r\n                    <p>Humidity: {temp.humidity}%</p>\r\n                    <p>Wind: {wind.speed} km/h | {wind.deg} deg.</p>\r\n                    </>\r\n                ) : (\r\n                    message === 'city not found'? (\r\n                        <>\r\n                            <p>{message}</p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <p>{name} | {sys.country}</p>\r\n                            <span className='inline-flex justify-between'>\r\n                                <p>{weather[0].main}</p>\r\n                                <img src={weatherIcon(weather[0].main)} alt={weather[0].main} />\r\n                            </span>\r\n                            <p>Temp: {parseInt(temp.temp-273.15)}°C</p>\r\n                            <button onClick={navToFollowers} >See more</button>\r\n                        </>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityInformation\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='load self-center'>\r\n            <span>Loading...</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useContext, useState, useEffect } from 'react';\r\nimport WeatherContext from '../../context/WeatherContext';\r\n//Custom hooks\r\nimport { useFetchData } from '../../hooks/useFetchData';\r\n//Components\r\nimport WeatherForm from '../../components/Home/Form/WeatherForm';\r\nimport CityInformation from '../../components/Custom/CityInformation/CityInformation';\r\nimport Loader from '../../components/Custom/Loader/Loader';\r\n\r\nconst Home = () => {\r\n\r\n  //States\r\n  const [ ciytName, setCiytName ] = useState('')\r\n\r\n  const { weather, handleWeather } = useContext(WeatherContext) \r\n  \r\n  //Functions\r\n  const handleCity = ( {value} ) => {\r\n    setCiytName(value)\r\n  }\r\n\r\n  //Api call\r\n  const { data, loader, handleFetchData } = useFetchData(`https://api.openweathermap.org/data/2.5/weather?q=${ciytName}&appid=${process.env.REACT_APP_API_KEY}`)\r\n  \r\n\r\n  useEffect(() => {\r\n    \r\n    const dataToContext = () => {\r\n      handleWeather(data)\r\n    }\r\n\r\n    dataToContext()\r\n  }, [data, handleWeather])\r\n\r\n\r\n  return (\r\n    <div className=\"homeview h-full flex flex-col justify-center\">\r\n      <WeatherForm\r\n        handleCity={handleCity}\r\n        handleFetchData={handleFetchData}\r\n        />\r\n\r\n      {\r\n        loader && <Loader />\r\n      }\r\n\r\n      {\r\n        weather && <CityInformation\r\n        message={weather?.message}\r\n        name={weather?.name}\r\n        weather={weather?.weather}\r\n        temp={weather?.main}\r\n        sys={weather?.sys}\r\n        />\r\n      }\r\n    </div>      \r\n  )\r\n}\r\n\r\nexport default Home","import { useState/*, useEffect*/ } from 'react'\r\n\r\nexport const useFetchData = API => {\r\n\r\n    const [ data, setData ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n    \r\n    const handleFetchData = async e => {\r\n        e.preventDefault()\r\n        setData(null)\r\n        setLoader(true)\r\n        const response = await fetch(API)\r\n        const result = await response.json()\r\n        setData(result)\r\n        setLoader(false)\r\n        /*setTimeout(() => {\r\n            setData(result)\r\n            setLoader(false)\r\n        }, 1500)*/\r\n    }\r\n\r\n    //console.log(data)\r\n\r\n    return { data, loader, handleFetchData }\r\n\r\n}","import React, { /*useState, useEffect,*/ useContext } from 'react'\r\nimport { useNavigate/*, useParams, useLocation, */ } from 'react-router'\r\n\r\nimport WeatherContext from '../../context/WeatherContext';\r\n\r\n//Components\r\nimport Loader from '../../components/Custom/Loader/Loader';\r\nimport CityInformation from '../../components/Custom/CityInformation/CityInformation'\r\n\r\nimport '../WeatherInformation/WeatherInformation.style.scss'\r\n\r\nconst WeatherInformation = () => {\r\n    \r\n    const { weather } = useContext(WeatherContext) \r\n    //console.log(weather)\r\n    \r\n    const navigate = useNavigate()\r\n    //const { name } = useParams()\r\n    \r\n    return (\r\n        <div className='weatherview h-full flex flex-col justify-center'>\r\n\r\n            {\r\n                weather ? (\r\n                <>\r\n                <CityInformation\r\n                    name={weather.name}\r\n                    weather={weather.weather}\r\n                    temp={weather.main}\r\n                    sys={weather.sys}\r\n                    wind={weather.wind}\r\n                />\r\n                <button className='self-center absolute'\r\n                onClick={() => navigate(-1)}>Go back</button>\r\n                </> \r\n                ) : <Loader />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInformation\r\n","import React from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport { WeatherContextProvider } from \"./context/WeatherContext\";\n//Views\nimport Home from './views/Home/Home';\nimport WeatherInformation from './views/WeatherInformation/WeatherInformation';\n//Style\nimport Div100vh from 'react-div-100vh';\nimport './styles/App.style.scss';\n\nfunction App() {\n\n  const hours = new Date().getHours();\n\n  return (\n    <Div100vh \n      className={\n        `flex flex-col\n        ${\n          hours >= 16 && hours <= 18 ? 'sunsetBg' :\n          hours >= 6 && hours <= 15 ? 'dayBg' :\n          'nightBg'\n        }`\n      }>\n      <WeatherContextProvider>\n        <Routes>\n            <Route exact path='/weather-api' element={<Home />} />\n            <Route path='/weather/:name' element={<WeatherInformation />} />\n        </Routes>\n      </WeatherContextProvider>\n    </Div100vh>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}