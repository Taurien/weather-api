{"version":3,"sources":["context/WeatherContext.jsx","assets/magnifying-glass.svg","components/Home/Form/WeatherForm.jsx","assets/speed.svg","assets/arrow.svg","components/Custom/CityInformation/CityInformation.jsx","components/Custom/Loader/Loader.jsx","views/Home/Home.jsx","hooks/useFetch.jsx","views/WeatherInformation/WeatherInformation.jsx","App.js","reportWebVitals.js","index.js"],"names":["WeatherContext","createContext","WeatherContextProvider","children","useState","dataFromIP","setDataFromIP","weather","setWeather","state","msg","gpsError","setGpsError","fetchAndSetWeather","lat","lon","a","latitude","toFixed","longitude","axios","get","process","currentWeather","data","weatherOnIp","res","IPv4","city","continent","continent_code","country","country_code","flag","region","timezone","useEffect","extraData","coord","forecast","airPollution","message","undefined","handleWeather","el","locationByGps","e","navigator","geolocation","getCurrentPosition","pos","coords","console","log","err","warn","code","enableHighAccuracy","timeout","maximumAge","Provider","value","WeatherForm","handleCity","handleFetch","action","className","onSubmit","type","placeholder","onChange","target","src","magnifying","alt","CityInformation","min","navigate","useNavigate","ForecastSection","useContext","list","map","elm","item","dt","Date","padStart","obj","String","getHours","getMinutes","description","icon","main","humidity","temp_max","temp_min","name","sys","temp","feels_like","wind","speed","deg","style","transform","WebkitTransform","arrow","onClick","pathname","Loader","Home","ciytName","setCiytName","API","response","setResponse","loader","setLoader","preventDefault","useFetch","WeatherInformation","App","hours","background","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2649689.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React, { createContext, useState, useEffect } from 'react'\r\n\r\nconst WeatherContext = createContext()\r\n\r\nconst WeatherContextProvider = ({ children }) => {\r\n\r\n    const [ dataFromIP, setDataFromIP ] = useState(null)\r\n    const [ weather, setWeather] = useState(null)\r\n    const [ gpsError, setGpsError] = useState({state: false, msg: null})\r\n\r\n    const handleWeather = (el) => setWeather(el)\r\n\r\n    const fetchAndSetWeather = async (lat, lon) => {\r\n        const latitude = +lat.toFixed(2)\r\n        const longitude = +lon.toFixed(2)\r\n        \r\n        const currentWeather = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\r\n\r\n        setWeather({\r\n            currentWeather: currentWeather.data,\r\n        })\r\n    }\r\n\r\n    const weatherOnIp = async () => {\r\n        const res = await axios.get('https://geolocation-db.com/json/')\r\n        const { IPv4 } = res.data\r\n\r\n        const { data } = await axios.get(`https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.REACT_APP_IPSTACK_KEY}&ip_address=${IPv4}`)\r\n        \r\n        // console.log(data)\r\n        const {\r\n            city,\r\n            continent,\r\n            continent_code,\r\n            country,\r\n            country_code,\r\n            flag,\r\n            latitude,\r\n            longitude,\r\n            region,\r\n            timezone} = data\r\n\r\n        setDataFromIP({\r\n            city,\r\n            continent,\r\n            continent_code,\r\n            country,\r\n            country_code,\r\n            flag,\r\n            latitude,\r\n            longitude,\r\n            region,\r\n            timezone\r\n        })\r\n\r\n        fetchAndSetWeather(latitude, longitude)\r\n    }\r\n\r\n    useEffect(() => {\r\n        weatherOnIp()\r\n    },[])\r\n\r\n    // \r\n\r\n    const extraData = async (currentWeather) => {\r\n        const {lon, lat} = currentWeather.coord\r\n        \r\n        // const currentDate = new Date()\r\n        // const toTimestamp = (date) => Math.floor(date.getTime()/1000)\r\n\r\n        // const daysBefore = currentDate.setDate(currentDate.getDate() - 2)\r\n        // const daysAfter = currentDate.setDate(currentDate.getDate() + 2)\r\n        \r\n        // const start = toTimestamp(new Date(daysBefore))\r\n        // const start = toTimestamp(currentDate)\r\n        // const end = toTimestamp(new Date(daysAfter))\r\n\r\n        const forecast = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&cnt=${9}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\r\n        // const airPollution = await axios.get(`http://api.openweathermap.org/data/2.5/air_pollution/forecast?lat=${lat}&lon=${lon}&start=${start}&end=${end}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\r\n        const airPollution = await axios.get(`https://api.openweathermap.org/data/2.5/air_pollution/forecast?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\r\n\r\n        setWeather({\r\n            ...weather,\r\n            forecast: forecast.data,\r\n            airPollution: airPollution.data\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!weather?.currentWeather.message && weather?.currentWeather !== undefined) extraData(weather.currentWeather)\r\n    },[weather?.currentWeather])\r\n\r\n    \r\n    const locationByGps = (e) => {\r\n        const options = {\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 0\r\n        };\r\n\r\n        const success = (pos) => {\r\n            // console.log(pos)\r\n            const coords = pos.coords;\r\n            setGpsError(false)\r\n\r\n            console.log('Your current position is:');\r\n            console.log(`Latitude : ${coords.latitude}`);\r\n            console.log(`Longitude: ${coords.longitude}`);\r\n            // console.log(`More or less ${coords.accuracy} meters.`);\r\n            fetchAndSetWeather(coords.latitude, coords.longitude)\r\n        }\r\n\r\n        const error = (err) => {\r\n            console.log(err)\r\n            console.warn(`ERROR(${err.code}): ${err.message}`);\r\n            setGpsError({state: true, msg: err.message})\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(success, error, options);\r\n    }\r\n\r\n        \r\n    const data = {\r\n        dataFromIP,\r\n        weather,\r\n        handleWeather,\r\n        locationByGps,\r\n        gpsError\r\n    }\r\n    \r\n    return (\r\n        <WeatherContext.Provider value={ data }>\r\n            {children}\r\n        </WeatherContext.Provider>\r\n    )\r\n}\r\n\r\nexport { WeatherContextProvider }\r\nexport default WeatherContext\r\n","export default __webpack_public_path__ + \"static/media/magnifying-glass.3f89d579.svg\";","import React from 'react'\r\n\r\nimport magnifying from '../../../assets/magnifying-glass.svg'\r\n\r\nconst WeatherForm = ({ handleCity, handleFetch }) => {\r\n    return (\r\n        <form action=''\r\n        className='overflow-hidden rounded-full w-8/12  desktop:w-2/5 box-shdw'\r\n        onSubmit={e => handleFetch(e)}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder='City Name'\r\n                onChange={({ target }) => handleCity(target)}\r\n                className='w-8/12 px-4 py-1 outline-none'\r\n            />\r\n            <div className='inline-flex items-center justify-center w-4/12 px-4 py-1 outline-none bg-gray-200'>\r\n                <input type=\"submit\" value='Search' className='outline-none mr-1'/>\r\n                <img className='w-4' src={magnifying} alt=\"\" />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WeatherForm\r\n","export default __webpack_public_path__ + \"static/media/speed.ca7debe4.svg\";","export default __webpack_public_path__ + \"static/media/arrow.0733ddb9.svg\";","import React, { useContext, useState } from 'react'\r\n//Router\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport WeatherContext from '../../../context/WeatherContext'\r\n\r\nimport speed from '../../../assets/speed.svg'\r\nimport arrow from '../../../assets/arrow.svg'\r\n\r\n\r\nconst CityInformation = ({ currentWeather, forecast, airPollution, min = false, ...props }) => {\r\n    \r\n    const navigate = useNavigate()\r\n    const { weather } = useContext(WeatherContext)\r\n    // const { currentWeather, forecast, airPollution } = weather\r\n    // console.log(currentWeather, forecast, airPollution, min, props)\r\n\r\n    const seeMoreNav = () => {\r\n        navigate({ pathname: `/weather/${currentWeather.name}` })\r\n    }\r\n\r\n    const ForecastSection = () => (\r\n        <div className='forecast w-full flex flex-row py-2 overflow-y-hidden overflow-x-visible rounded-md glass'>\r\n            {\r\n                forecast?.list.map((elm, item) => {\r\n                    const dt = new Date(elm.dt*1000)\r\n                    const padStart = obj => String(obj).padStart(2, \"0\")\r\n                    return (\r\n                        <div key={item} className='forecast_item flex flex-col items-center px-1'>\r\n                            <p className=' text-center'>{padStart(dt.getHours())}:{padStart(dt.getMinutes())}</p>\r\n                            <div className='flex flex-col items-center'>\r\n                                <p className='min-w-max  font-bold text-center capitalize'>{elm.weather[0].description}</p>\r\n                                <img className=' w-14' src={`http://openweathermap.org/img/wn/${elm.weather[0].icon}@2x.png`} alt={elm.weather[0].main} />\r\n                            </div>\r\n                            <p className=''>Humidity:<b>{elm.main.humidity}%</b></p>\r\n                            <div className='flex flex-col items-center overflow-hidden rounded-xl text-center'>\r\n                                <p className='w-full p-2 bg-red-400 font-bold'>{elm.main.temp_max}°</p>\r\n                                <p className='w-full p-2 bg-blue-400 font-bold'>{elm.main.temp_min}°</p>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n    \r\n    \r\n    return (\r\n        <div className='relative self-center desktop:min-w-min mobile:w-9/12 flex flex-col items-center rounded-lg p-3 my-auto text-xs glass box-shdw'>\r\n            {\r\n                currentWeather.message?\r\n                <>\r\n                    <p className='capitalize'>{currentWeather.message}</p>\r\n                </> \r\n                : \r\n                <>\r\n                    <div className='self-end inline-flex items-center font-bold text-sm'>\r\n                        <p>{currentWeather.name} | {currentWeather.sys.country}</p>\r\n                        <img className='h-4 ml-1' src={`https://countryflagsapi.com/svg/${currentWeather.sys.country}`} alt={`${currentWeather.sys.country} flag`} />\r\n                    </div>\r\n                    \r\n                    <div className='h-20 w-64 inline-flex items-center justify-evenly overflow-hidden mb-2'>\r\n                        <div className='relative w-24 h-24 flex flex-col justify-center'>\r\n                            <p className='text-5xl text-center'>{currentWeather.main.temp.toFixed()}°</p>\r\n                            <p className='w-full absolute bottom-2 left-1/2 transform-center text-center '>Feels like <b>{currentWeather.main.feels_like}°</b></p>\r\n                        </div>\r\n                        <div className=' relative w-24 h-24 flex flex-col justify-center'>\r\n                            <img className='' src={`http://openweathermap.org/img/wn/${currentWeather.weather[0].icon}@2x.png`} alt={currentWeather.weather[0].main} />\r\n                            <p className='w-full absolute bottom-2 left-1/2 transform-center text-center  font-bold capitalize'>{currentWeather.weather[0].description}</p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <p className='mb-2'>Humidity: <b>{currentWeather.main.humidity}%</b></p>\r\n\r\n                    <div className='flex flex-col items-center overflow-hidden rounded-xl mb-2 text-center'>\r\n                        <p className='w-full p-2 bg-red-400 font-bold'>{currentWeather.main.temp_max}°</p>\r\n                        <p className='w-full p-2 bg-blue-400 font-bold'>{currentWeather.main.temp_min}°</p>\r\n                    </div>\r\n                </>\r\n            }\r\n\r\n            {/* {\r\n                !currentWeather.message && \r\n                    <div className='absolute top-0 left-0'>\r\n                        <button className='rounded-lg'>F</button>\r\n                        <button className='rounded-lg'>C</button>\r\n                    </div>\r\n            } */}\r\n\r\n            {\r\n                !currentWeather.message && !min &&\r\n                <>\r\n                    <div className='inline-flex w-64 items-center justify-evenly mb-2 font-bold'>\r\n                        <div className='inline-flex items-center'>\r\n                            <p className='mr-2'>{(currentWeather.wind.speed*3.6).toFixed(1)} km/h</p>\r\n                            <img className='w-8' src={speed} alt=\"\" />\r\n                        </div>\r\n                        <div className='inline-flex items-center'>\r\n                            <p className='mr-2'>{currentWeather.wind.deg}°</p>\r\n                            <div className='w-7 h-7 flex items-center justify-center rounded-full border border-solid border-black'>\r\n                                <img\r\n                                    style={{transform: `rotate(${(-135+currentWeather.wind.deg)}deg)`, WebkitTransform: `rotate(${-135+currentWeather.wind.deg}deg)`}}\r\n                                    className='w-4' src={arrow} alt=\"\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ForecastSection />\r\n                </>\r\n            }\r\n\r\n            {\r\n                !currentWeather.message && min &&\r\n                <button className='px-2 py-1 text-base rounded-lg glass box-shdw' onClick={seeMoreNav} >See more</button> \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CityInformation\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className='load p-4 my-auto rounded-lg glass box-shdw'>\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useContext, useState, useEffect } from 'react';\r\nimport WeatherContext from '../../context/WeatherContext';\r\n//Custom hooks\r\nimport { useFetch } from '../../hooks/useFetch';\r\n//Components\r\nimport WeatherForm from '../../components/Home/Form/WeatherForm';\r\nimport CityInformation from '../../components/Custom/CityInformation/CityInformation';\r\nimport Loader from '../../components/Custom/Loader/Loader';\r\n\r\nconst Home = () => {\r\n\r\n  const [ ciytName, setCiytName ] = useState('')\r\n\r\n  const { dataFromIP, weather, handleWeather, locationByGps, gpsError } = useContext(WeatherContext) \r\n  // console.log(weather)\r\n  \r\n  //Functions\r\n  const handleCity = ( {value} ) => {\r\n    setCiytName(value)\r\n  }\r\n\r\n  const { response, loader, handleFetch } = useFetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciytName}&appid=${process.env.REACT_APP_API_KEY}&units=metric`)\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const dataToContext = () => handleWeather({currentWeather: response})\r\n\r\n    if (response !== null) dataToContext()\r\n  }, [response])\r\n\r\n\r\n  return (\r\n    <div className=\"homeview h-4/6 flex flex-col items-center\">\r\n      {\r\n        gpsError.state && \r\n        <div className='absolute w-full top-0 left-0 z-10 py-1 bg-yellow-300 font-bold text-center'>\r\n          ⚠ {gpsError.msg}\r\n        </div>\r\n      }\r\n\r\n      <WeatherForm\r\n        handleCity={handleCity}\r\n        handleFetch={handleFetch}\r\n      />\r\n\r\n      {\r\n        (!dataFromIP || loader) && <Loader /> \r\n      }\r\n\r\n      {\r\n        dataFromIP && weather && \r\n        <>\r\n          <CityInformation  currentWeather={weather.currentWeather} forecast={weather.forecast} airPollution={weather.airPollution} min={true} />\r\n          <button className=' px-2 py-1 rounded-lg bg-gray-200' onClick={() => locationByGps()}>Use GPS</button>\r\n        </>\r\n      }\r\n\r\n      \r\n    </div>      \r\n  )\r\n}\r\n\r\nexport default Home","import { useState/*, useEffect*/ } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useFetch = API => {\r\n\r\n    const [ response, setResponse ] = useState(null)\r\n    const [ loader, setLoader ] = useState(false)\r\n    \r\n    const handleFetch = async e => {\r\n        e.preventDefault()\r\n        \r\n        setResponse(null)\r\n        setLoader(true)\r\n\r\n        try {\r\n            const res = await axios.get(API)\r\n            // console.log(res)\r\n            setResponse(res.data)\r\n        } catch (error) {\r\n            console.warn(error)  \r\n            setResponse(error.response.data)\r\n        }\r\n        \r\n        setLoader(false)\r\n    }\r\n\r\n    // console.log(response)\r\n\r\n    return { response, loader, handleFetch }\r\n\r\n}","import React, { /*useState, useEffect,*/ useContext } from 'react'\r\nimport { useNavigate/*, useParams, useLocation, */ } from 'react-router'\r\n\r\nimport WeatherContext from '../../context/WeatherContext';\r\n\r\n//Components\r\nimport Loader from '../../components/Custom/Loader/Loader';\r\nimport CityInformation from '../../components/Custom/CityInformation/CityInformation'\r\n\r\n\r\nconst WeatherInformation = () => {\r\n    \r\n    const { weather } = useContext(WeatherContext) \r\n    //console.log(weather)\r\n    \r\n    const navigate = useNavigate()\r\n    //const { name } = useParams()\r\n    \r\n    return (\r\n        <div className='weatherview h-4/5 flex flex-col'>\r\n            {\r\n                weather ? (\r\n                <>\r\n                    <CityInformation currentWeather={weather.currentWeather} forecast={weather.forecast} airPollution={weather.airPollution} />\r\n                    <button className='self-center mt-4 px-2 py-1 text-base rounded-lg bg-gray-200' onClick={() => navigate(-1)}>Go back</button>\r\n                </> \r\n                ) : <Loader />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WeatherInformation\r\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { WeatherContextProvider } from \"./context/WeatherContext\";\n//Views\nimport Home from './views/Home/Home';\nimport WeatherInformation from './views/WeatherInformation/WeatherInformation';\n//Style\nimport Div100vh from 'react-div-100vh';\nimport './styles/App.style.scss';\n\nfunction App() {\n\n  const hours = new Date().getHours();\n\n  const background = hours >= 16 && hours <= 18 ? 'sunsetBg' : hours >= 6 && hours <= 15 ? 'dayBg' : 'nightBg'\n\n  return (\n    <div className={` min-h-screen flex flex-col justify-center ${background}`}>\n      <WeatherContextProvider>\n        <Routes>\n            <Route exact path='/weather-api' element={<Home />} />\n            <Route path='/weather/:name' element={<WeatherInformation />} />\n        </Routes>\n      </WeatherContextProvider>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}